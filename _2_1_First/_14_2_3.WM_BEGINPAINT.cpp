/*
	아무 코드도 없지만, 교재에서 BeginPaint를 이해하는 것이 중요하다 강조하여, 과정을 적었습니다.

	○ BeginPaint
	1) BeginPaint 호출시, DC를 발급받는다. DC는 BeginPaint의 리턴값이 된다. 
	   PAINTSTRUCT 구조체의 멤버인 fErase( 전부 초기화하고 다시 그릴지 여부의 BOOL ), rcPaint 를 조사해서 채운다

	2) 클리핑영역을 조사하여 DC 에 설정한다. 이 때 무효영역, 윈도우의 Z 순서, 보이기 상태 등의 여러 정보를 참조

	3) 2) 에서 그릴 영역을 DC에 채웠으므로, 기존의 무효 영역을 없앤다(유효화한다) 
	  ※ 이부분이 중요한데, 만약 무효 영역을 없애지 않는다면, WM_PAINT가 무한히 발동한다.
	   
	    -> 예를 들어, 
		    case WM_PAINT :
				return 0;

			이런 코드가 있다 하자. 이러면 BeginPaint가 발동하지 않으므로, 무효화 영역이 사라지지 않고,
			WM_PAINT 는 무한히 발동하여 연산을 잡아먹는다.

	4) 다시 그려지는 영역에 캐럿 ( 타이핑 커서 ) 이 있다면 캐럿을 숨기고, EndPaint 시점에 캐럿을 복구한다

	5) 윈도우의 배경을 백그라운드 브러시로 지우기 위해, WM_ERASEBKGND 메세지를 보낸다.
	   WM_NCPAINT 메세지를 보내 비작업영역(타이틀바) 를 그린다

	-> 위 5 작업을 통해 BeginPaint 코드가 진행된다. 이후 사용자가 정의한 WM_PAINT 내의 이후 내용이 시행된다
	 

	 
	 ※ 위 내용들로 인해, 대부분의 그리기 작업은 WM_PAINT 에서 처리한다.
	   GetDC 로 hdc 를 뽑아서 그릴 수도 있지만, 위에서 언급한 
	   1) 클리핑 영역 유효 처리, 2) WM_ERASEBKGND 처리를 WM_PAINT의 BeginPaint 에서 하기 때문


*/