#if 1 // Total
/*----------------------------------------------------------------------------------------------------

----------------------------------------------------------------------------------------------------*/


#if 1 // 주석
#include <Windows.h>

LRESULT CALLBACK WndProc(HWND, UINT, WPARAM, LPARAM);
HINSTANCE g_hInst;
LPCTSTR lpszClass = TEXT("Sample_1");

int APIENTRY WinMain(HINSTANCE hInstance, HINSTANCE hPrevInstance, LPSTR lpszCmdParam, int nCmdShow)
{
	HWND hWnd;
	MSG Message;
	WNDCLASS WndClass;
	g_hInst = hInstance;

	WndClass.cbClsExtra = 0;
	WndClass.cbWndExtra = 0;
	WndClass.hbrBackground = (HBRUSH)GetStockObject(WHITE_BRUSH);
	WndClass.hCursor = LoadCursor(NULL, IDC_ARROW);
	WndClass.hIcon = LoadIcon(NULL, IDI_APPLICATION);
	WndClass.hInstance = hInstance;
	WndClass.lpfnWndProc = WndProc;
	WndClass.lpszClassName = lpszClass;
	WndClass.lpszMenuName = NULL;
	WndClass.style = CS_VREDRAW | CS_HREDRAW;
	RegisterClass(&WndClass);

	hWnd = CreateWindow(lpszClass, lpszClass, WS_OVERLAPPEDWINDOW,
		CW_USEDEFAULT, CW_USEDEFAULT, CW_USEDEFAULT, CW_USEDEFAULT,
		NULL, (HMENU)NULL, hInstance, NULL);
	ShowWindow(hWnd, nCmdShow);

	while (GetMessage(&Message, NULL, 0, 0))
	{
		TranslateMessage(&Message);
		DispatchMessage(&Message);
	}
	return (int)Message.wParam;
}


LRESULT CALLBACK WndProc(HWND hWnd, UINT iMessage, WPARAM wParam, LPARAM lParam)
{
	HDC hdc;
	PAINTSTRUCT ps;

	static RECT displayRect;
	static TCHAR sampleStr[64];

	switch (iMessage)
	{
	case WM_SIZE:
		displayRect.right = LOWORD(lParam);
		displayRect.bottom = HIWORD(lParam);
		return 0;
	case WM_PAINT:
		hdc = BeginPaint(hWnd, &ps);

		SetTextAlign(hdc, TA_CENTER);
		TextOut(hdc, displayRect.right / 2, displayRect.bottom / 2 - 20, TEXT("IM_SAMPLE_1"), 8);

		EndPaint(hWnd, &ps);
		return 0;
	case WM_LBUTTONDOWN:
		hdc = GetDC(hWnd);
		SetTimer(hWnd, 1, 2'000, NULL);
		lstrcpy(sampleStr, TEXT("LUBTTON_DOWNED"));
		SetTextAlign(hdc, TA_LEFT | TA_TOP);
		TextOut(hdc, displayRect.right / 2, displayRect.bottom / 2 + 20, sampleStr, lstrlen(sampleStr));
		ReleaseDC(hWnd, hdc);
		return 0;

	case WM_TIMER:
		switch (wParam)
		{
		case 1:
			RECT resetRect = { displayRect.right / 2, displayRect.bottom / 2 + 20, displayRect.right / 2 + 40,
			displayRect.bottom + 40 };
			InvalidateRect(hWnd, NULL, TRUE);
			KillTimer(hWnd, 1);

			break;
		}
		return 0;
	case WM_DESTROY:
		PostQuitMessage(0);
		return 0;
	}
	return (DefWindowProc(hWnd, iMessage, wParam, lParam));
}





#endif // 주석


#if 1 // 코드만


#endif // 코드만


#endif // Total